#!/bin/bash
set -e

source $(dirname $0)/version

cd $(dirname $0)/..

PROJECT=`basename "$PWD"`

case $(uname -m) in
  aarch64 | arm64)
    ARCH=arm64
    ;;
  x86_64)
    ARCH=amd64
    ;;
  s390x)
    ARCH=s390x
    ;;
  *)
    echo "$(uname -a): unsupported architecture"
    exit 1
esac

if [ ! -x ./bin/longhorn ]; then
    ./scripts/build
fi

cp -r bin package/

APIVERSION=`./bin/longhorn-instance-manager version --client-only|jq ".clientVersion.instanceManagerAPIVersion"`
TAG=${TAG:-v${APIVERSION}_`date -u +%Y%m%d`}
REPO=${REPO:-longhornio}
IMAGE=${REPO}/${PROJECT}:${TAG}

# update base image to get latest changes
grep FROM package/Dockerfile | awk '{print $2}' | while read -r BASE_IMAGE
do
    docker pull "$BASE_IMAGE"
done

echo "Building ${IMAGE} with ARCH=${ARCH} SRC_BRANCH=${SRC_BRANCH} SRC_TAG=${SRC_TAG}"
docker build \
  --build-arg ARCH="${ARCH}" \
  --build-arg SRC_BRANCH="${SRC_BRANCH}" \
  --build-arg SRC_TAG="${SRC_TAG}" \
  -t "${IMAGE}" \
  -f package/Dockerfile .

echo Built ${IMAGE}

echo ${IMAGE} > ./bin/latest_image
